{
  "no_authz_inputs": [
    "CreateOrganizationInput",
    "invite",
    "AcceptInviteInput"
  ],
  "mappings": [
    {
      "namespace": "Organization",
      "inputs": [
        "organization",
        "EditOrganizationInput",
        "CreateProjectInput",
        "CreateCredentialInput",
        "CreateWebhookInput",
        "InviteMemberInput"
      ]
    },
    {
      "namespace": "Credential",
      "inputs": [
        "EditCredentialInput",
        "DeleteCredentialInput"
      ]
    },
    {
      "namespace": "Webhook",
      "inputs": [
        "EditWebhookInput",
        "DeleteWebhookInput"
      ]
    },
    {
      "namespace": "Project",
      "inputs": [
        "project",
        "EditProjectInput",
        "CreateCustomerInput",
        "CreateDropInput"
      ]
    },
    {
      "namespace": "Drop",
      "inputs": [
        "MintDropInput"
      ]
    },
    {
      "namespace": "Customer",
      "inputs": [
        "CreateCustomerWalletInput"
      ]
    }
  ],
  "schema": "schema {\n  query: Query\n  mutation: Mutation\n}\ninput AcceptInviteInput {\n  invite: UUID!\n}\ntype AcceptInvitePayload {\n  invite: Invite!\n}\ntype AccessToken {\n  accessToken: String!\n  expiresAt: NaiveDateTime!\n  tokenType: String!\n}\nunion Affiliation = Owner | Member\nenum AssetType {\n  SOL\n  SOL_TEST\n  MATIC_TEST\n  MATIC\n  ETH_TEST\n  ETH\n}\nenum Blockchain {\n  ETHEREUM\n  POLYGON\n  SOLANA\n}\ntype Collection {\n  id: UUID!\n  blockchain: Blockchain!\n  supply: Int\n  creationStatus: CreationStatus!\n  address: String\n  totalMints: Int!\n  metadataJson: MetadataJson\n  mints: [CollectionMint!]\n  creators: [CollectionCreator!]\n  holders: [Holder!]\n}\ntype CollectionCreator {\n  collectionId: UUID!\n  address: String!\n  verified: Boolean!\n  share: Int!\n}\ninput CollectionCreatorInput {\n  address: String!\n  verified: Boolean\n  share: Int!\n}\ntype CollectionMint {\n  id: UUID!\n  collectionId: UUID!\n  address: String!\n  owner: String!\n  creationStatus: CreationStatus!\n  createdBy: UUID!\n  createdAt: NaiveDateTime!\n  collection: Collection\n}\ninput CreateCredentialInput {\n  organization: UUID!\n  name: String!\n}\ntype CreateCredentialPayload {\n  credential: Credential!\n  accessToken: AccessToken!\n}\ninput CreateCustomerInput {\n  project: UUID!\n}\ntype CreateCustomerPayload {\n  customer: Customer!\n}\ninput CreateCustomerWalletInput {\n  customer: UUID!\n  assetType: AssetType!\n}\ntype CreateCustomerWalletPayload {\n  wallet: Wallet!\n}\ninput CreateDropInput {\n  project: UUID!\n  price: Int\n  sellerFeeBasisPoints: Int\n  supply: Int\n  startTime: DateTime\n  endTime: DateTime\n  blockchain: Blockchain!\n  creators: [CollectionCreatorInput!]!\n  metadataJson: MetadataJsonInput!\n}\ntype CreateDropPayload {\n  drop: Drop!\n}\ninput CreateOrganizationInput {\n  name: String!\n  profileImageUrl: String\n}\ntype CreateOrganizationPayload {\n  organization: Organization!\n}\ninput CreateProjectInput {\n  organization: UUID!\n  name: String!\n  profileImageUrl: String\n}\ntype CreateProjectPayload {\n  project: Project!\n}\ninput CreateWebhookInput {\n  url: String!\n  organization: UUID!\n  description: String!\n  projects: [UUID!]!\n  filterTypes: [FilterType!]!\n}\ntype CreateWebhookPayload {\n  webhook: Webhook!\n  secret: String!\n}\nenum CreationStatus {\n  CREATED\n  PENDING\n}\ntype Credential {\n  name: String!\n  clientId: String!\n  createdById: UUID!\n  organizationId: UUID!\n  createdAt: NaiveDateTime!\n  createdBy: User\n}\ntype Customer {\n  id: UUID!\n  projectId: UUID!\n  createdAt: NaiveDateTime!\n  updatedAt: NaiveDateTime\n  treasury: Treasury\n}\nscalar DateTime\ninput DeleteCredentialInput {\n  credential: String!\n}\ntype DeleteCredentialPayload {\n  credential: String!\n}\ninput DeleteWebhookInput {\n  webhook: UUID!\n}\ntype DeleteWebhookPayload {\n  webhook: UUID!\n}\ntype Drop {\n  id: UUID!\n  projectId: UUID!\n  creationStatus: CreationStatus!\n  startTime: NaiveDateTime\n  endTime: NaiveDateTime\n  price: Int!\n  createdById: UUID!\n  createdAt: NaiveDateTime!\n  collection: Collection!\n  status: DropStatus!\n}\nenum DropStatus {\n  MINTING\n  MINTED\n  SCHEDULED\n  EXPIRED\n  CREATING\n}\ninput EditCredentialInput {\n  clientId: String!\n  name: String!\n}\ntype EditCredentialPayload {\n  credential: Credential!\n}\ninput EditOrganizationInput {\n  id: UUID!\n  name: String!\n  profileImageUrl: String\n}\ntype EditOrganizationPayload {\n  organization: Organization!\n}\ninput EditProjectInput {\n  id: UUID!\n  name: String!\n  profileImageUrl: String\n}\ntype EditProjectPayload {\n  project: Project!\n}\ninput EditWebhookInput {\n  webhook: UUID!\n  url: String!\n  description: String!\n  projects: [UUID!]!\n  filterTypes: [FilterType!]!\n  disabled: Boolean\n}\ntype EditWebhookPayload {\n  webhook: Webhook!\n}\ntype EventType {\n  archived: Boolean\n  createdAt: String!\n  description: String!\n  name: String!\n  schemas: JSON!\n  updatedAt: String!\n}\nenum FilterType {\n  PROJECT_CREATED\n  CUSTOMER_CREATED\n  CUSTOMER_TREASURY_CREATED\n  PROJECT_WALLET_CREATED\n  CUSTOMER_WALLET_CREATED\n  DROP_CREATED\n  DROP_MINTED\n}\ntype Holder {\n  collectionId: UUID!\n  address: String!\n  owns: Int!\n  mints: [String!]!\n}\ntype Invite {\n  id: UUID!\n  email: String!\n  status: InviteStatus!\n  organizationId: UUID!\n  createdBy: UUID!\n  createdAt: NaiveDateTime!\n  updatedAt: NaiveDateTime\n  member: Member\n  organization: Organization\n}\ninput InviteMemberInput {\n  organization: UUID!\n  email: String!\n}\nenum InviteStatus {\n  ACCEPTED\n  REVOKED\n  SENT\n}\nscalar JSON\ntype Member {\n  userId: UUID!\n  user: User\n  id: UUID!\n  organizationId: UUID!\n  createdAt: NaiveDateTime!\n  revokedAt: NaiveDateTime\n  inviteId: UUID!\n  organization: Organization\n  invite: Invite\n}\ntype MetadataJson {\n  collectionId: UUID!\n  identifier: String!\n  name: String!\n  uri: String!\n  symbol: String!\n  description: String!\n  image: String!\n  animationUrl: String\n  externalUrl: String\n  attributes: [MetadataJsonAttribute!]\n}\ntype MetadataJsonAttribute {\n  id: UUID!\n  collectionId: UUID!\n  traitType: String!\n  value: String!\n}\ninput MetadataJsonAttributeInput {\n  traitType: String!\n  value: String!\n}\ninput MetadataJsonCollectionInput {\n  name: String\n  family: String\n}\ninput MetadataJsonFileInput {\n  uri: String\n  fileType: String\n}\ninput MetadataJsonInput {\n  name: String!\n  symbol: String!\n  description: String!\n  image: String!\n  animationUrl: String\n  collection: MetadataJsonCollectionInput\n  attributes: [MetadataJsonAttributeInput!]!\n  externalUrl: String\n  properties: MetadataJsonPropertyInput\n}\ninput MetadataJsonPropertyInput {\n  files: [MetadataJsonFileInput!]\n  category: String\n}\ninput MintDropInput {\n  drop: UUID!\n  recipient: String!\n}\ntype MintEditionPayload {\n  collectionMint: CollectionMint!\n}\ntype Mutation {\n  createCredential(input: CreateCredentialInput!): CreateCredentialPayload!\n  editCredential(input: EditCredentialInput!): EditCredentialPayload!\n  deleteCredential(input: DeleteCredentialInput!): DeleteCredentialPayload!\n  createCustomer(input: CreateCustomerInput!): CreateCustomerPayload!\n  createDrop(input: CreateDropInput!): CreateDropPayload!\n  mintEdition(input: MintDropInput!): MintEditionPayload!\n  createOrganization(input: CreateOrganizationInput!): CreateOrganizationPayload!\n  editOrganization(input: EditOrganizationInput!): EditOrganizationPayload!\n  createProject(input: CreateProjectInput!): CreateProjectPayload!\n  editProject(input: EditProjectInput!): EditProjectPayload!\n  inviteMember(input: InviteMemberInput!): Invite!\n  acceptInvite(input: AcceptInviteInput!): AcceptInvitePayload!\n  createCustomerWallet(input: CreateCustomerWalletInput!): CreateCustomerWalletPayload!\n  createWebhook(input: CreateWebhookInput!): CreateWebhookPayload!\n  deleteWebhook(input: DeleteWebhookInput!): DeleteWebhookPayload!\n  editWebhook(input: EditWebhookInput!): EditWebhookPayload!\n}\nscalar NaiveDateTime\ntype Organization {\n  id: UUID!\n  credential(clientId: String!): Credential!\n  credentials(limit: Int, offset: Int): [Credential!]!\n  name: String!\n  createdAt: NaiveDateTime!\n  deactivatedAt: NaiveDateTime\n  profileImageUrl: String\n  members: [Member!]\n  owner: Owner\n  invites(status: InviteStatus): [Invite!]!\n  projects: [Project!]!\n  webhooks: [Webhook!]\n  webhook(id: UUID!): Webhook\n}\ntype Owner {\n  userId: UUID!\n  user: User\n  id: UUID!\n  organizationId: UUID!\n  createdAt: NaiveDateTime!\n  organization: Organization\n}\ntype Project {\n  id: UUID!\n  customer(id: UUID!): Customer\n  customers: [Customer!]\n  drops: [Drop!]\n  drop(id: UUID!): Drop\n  name: String!\n  organizationId: UUID!\n  createdAt: NaiveDateTime!\n  deactivatedAt: NaiveDateTime\n  profileImageUrl: String\n  organization: Organization\n  treasury: Treasury\n}\ntype Query {\n  user(id: UUID!): User\n  organization(id: UUID!): Organization\n  project(id: UUID!): Project\n  invite(id: UUID!): Invite\n  eventTypes: [EventType!]!\n}\ntype Treasury {\n  id: UUID!\n  vaultId: String!\n  createdAt: NaiveDateTime!\n  wallets: [Wallet!]\n  wallet(assetType: AssetType!): Wallet\n}\ntype User {\n  id: UUID!\n  firstName: String!\n  lastName: String!\n  email: String!\n  createdAt: String!\n  updatedAt: String!\n  affiliations: [Affiliation!]!\n}\nscalar UUID\ntype Wallet {\n  address: String!\n  mints: [CollectionMint!]\n  treasuryId: UUID!\n  assetId: AssetType!\n  legacyAddress: String!\n  tag: String!\n  createdAt: NaiveDateTime!\n  removedAt: NaiveDateTime\n  createdBy: UUID!\n}\ntype Webhook {\n  createdById: UUID!\n  createdBy: User\n  id: UUID!\n  channels: [String!]!\n  projects: [Project!]!\n  endpointId: String!\n  url: String!\n  events: [FilterType!]!\n  description: String!\n  createdAt: NaiveDateTime!\n  organizationId: UUID!\n  updatedAt: NaiveDateTime\n}"
}
